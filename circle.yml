# https://circleci.com/docs/configuration#machine
machine:
  php:
    # https://circleci.com/docs/environment#php
    version: 5.5.11
  environment:
    # DB config. Using default CircleCI's database.
    DB_NAME: "circle_test"
    DB_USERNAME: "ubuntu"
    DB_PASSWORD: ""
    DOCROOT: "$HOME/$CIRCLE_PROJECT_REPONAME/web"
    SERVER: server.local
    WEB_USER: $(whoami)
    WEB_GROUP: www-data
    TERMINUS_ENV: ci-$CIRCLE_BUILD_NUM
    TERMINUS_SITE: nerdologues-d8
    PATH: $PATH:~/.composer/vendor/bin
  hosts:
    server.local: 127.0.0.1

dependencies:
  cache_directories:
    - ~/.composer/cache
    - ~/nerdologues-d8/node_modules
  pre:
    # The memory limit of 128M was breached on site install when adding paragraphs module.
    - echo "memory_limit = 256M" > ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/memory.ini

    # Add apache config.
    - ./scripts/circle-ci/circle-apache.sh
    - composer global require "consolidation/cgr"
    - composer global require "hirak/prestissimo:^0.3"
    - cgr "drush/drush:~8"
    - sudo curl https://github.com/pantheon-systems/terminus/releases/download/0.13.6/terminus.phar -L -o /usr/local/bin/terminus && sudo chmod +x /usr/local/bin/terminus
    - terminus auth login --machine-token=$TerminusToken
    - echo "Installing gulp globally"
    - npm install -g gulp
test:
  pre:
    # Copy the settings.local into place
    - cp scripts/circle-ci/settings.cirlceci.php web/sites/default/settings.local.php
    # Disable sendmail binary to suppress any mailouts.
    - echo 'sendmail_path = /bin/true' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/circle.ini
    - drush --yes --root=$DOCROOT site-install config_installer
    # The behat tests fail if the site isn't curled first. Which is weird.
    - curl $SERVER
  override:
    - composer code-sniff
    - ./vendor/bin/phpunit -c web/core/ --group=nerdcustom web/modules/custom/ -v
    - cd tests  && ./../vendor/bin/behat --config=behat/behat-circle.yml behat/features/clickdriving --strict

  post:
    - terminus site create-env --to-env=$TERMINUS_ENV --from-env=dev
    - yes | terminus site clone-content --to-env=$TERMINUS_ENV --from-env=dev
    - ./scripts/circle-ci/deploy-to-multidev.sh
    - ./scripts/run-backstop.sh
