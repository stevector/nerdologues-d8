defaults: &defaults
  docker:
   - image: quay.io/pantheon-public/build-tools-ci:4.x
  working_directory: ~/example_drops_8_composer
  environment:
    TZ: "/usr/share/zoneinfo/America/Los_Angeles"
    ADMIN_USERNAME: admin
    BUILD_TOOLS_VERSION: dev-master
    TERM: dumb


commands:
  setbashenv:
    description: "Copy the bash_env from the first job so that TERMINUS_ENV persists."
    steps:
        - checkout
        - attach_workspace:
            at: /tmp/workspace
        - run: cp /tmp/workspace/bash_env.txt $BASH_ENV
        - run: source $BASH_ENV


version: 2.1
jobs:
    build:
        <<: *defaults
        steps:
            - checkout

            - restore_cache:
                keys:
                  - composer

            - run: ./.circleci/logins.sh
            - run: composer install  --optimize-autoloader --ignore-platform-reqs
            - save_cache:
                key: composer
                paths:
                  - $HOME/.composer/cache
            - run:  ./vendor/pantheon-systems/docker-build-tools-ci/scripts/set-environment

            - run: composer circle-tests

            - run:
                name: Deploy to Multidev
                command: |
                  echo "commenting out the slow commands"
                ## terminus -n build:env:create "$TERMINUS_SITE.dev" "$TERMINUS_ENV" --yes  --clone-content

            - run:
                name: updb and import
                command: |
                  echo "commenting out the slow commands"
 #                 terminus drush "$TERMINUS_SITE.$TERMINUS_ENV" -- updb -y
#                  terminus drush "$TERMINUS_SITE.$TERMINUS_ENV" -- config-import -y

            - run: cp $BASH_ENV bash_env.txt

            # https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs
            - persist_to_workspace:
                root: .
                paths:
                  - bash_env.txt

    backstop:
        docker:
            - image: quay.io/stevector/ci-backstop:latest
        working_directory: ~/example_drops_8_composer
        steps:

            - setbashenv

            - run: cd backstop && ./run-backstop.sh

            - store_artifacts:
                path: /tmp/artifacts
                destination: artifact

            - run: ./backstop/report-backstop.sh

    behavioral:
        <<: *defaults
        steps:
            - setbashenv

            - restore_cache:
                keys:
                  - composer

            - run: ./.circleci/logins.sh

            - run: composer install  --optimize-autoloader --ignore-platform-reqs

            - save_cache:
                key: composer
                paths:
                - $HOME/.composer/cache

            - run:
                name: Behat
                command: |
                    # ./.circleci/behat-runners/add-behat-users.sh
                    ######### @todo, take out the timing tag. That's just here for debugging to run the whole suite faster.
                    ./.circleci/behat-runners/behat-wrapper.sh --suite=clickdriving --stop-on-failure                                                                                                                                                                                                                                                           --tags=timing

    merge:
        <<: *defaults
        steps:
            - setbashenv
            - run: ./.circleci/merge-to-master.sh

orbs:
  cypress: cypress-io/cypress@1
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - behavioral:
          requires:
          - backstop
      - backstop:
          requires:
             - build
      - cypress/run:
          requires:
          - backstop
          store_artifacts: true
          pre-steps:
            - setbashenv
            - run: echo 'export CYPRESS_baseUrl="${MULTIDEV_SITE_URL}"' >> $BASH_ENV
            - run: source $BASH_ENV
      - merge:
          requires:
             - behavioral
             - cypress/run
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
    - build
    - behavioral:
        requires:
        - backstop
    - backstop:
        requires:
          - build
    - cypress/run:
        requires:
          - backstop
        store_artifacts: true
        pre-steps:
          - setbashenv
          - run: echo 'export CYPRESS_baseUrl="${MULTIDEV_SITE_URL}"' >> $BASH_ENV
          - run: source $BASH_ENV
