version: 2.1
workflows:
  version: 2
  build_and_test:
    jobs:
      - pantheon/push:
          resource_class: "small"
          checkout: false
          clone_content: true
          pre-steps:
            - checkout
            - playground/composer_install_no_dev
            - run: composer prepare-for-pantheon
            - run: cat .gitignore
            - run: git status
          post-steps:
            - run: cd "/tmp/pantheon_repo" && git status
            - run: echo "testing CI on master branch"
            # These commands should be called from Quicksilver.
            # https://github.com/pantheon-systems/quicksilver-examples/
            - run: terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- updatedb -y
            - run: terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" cr
            - run: terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- config-import --yes
      - playground/backstop:
          requires:
             - pantheon/push
      - behavioral:
          requires:
             - playground/backstop
      - cypress/run:
          requires:
          - playground/backstop
          # store_artifacts: true
          working_directory: tests/cypress

          cache-key: >-
            cache-{{ arch }}-{{ .Branch }}-{{ checksum "tests/cypress/package-lock.json"
            }}
          post-steps:
          - store_artifacts:
              path: tests/cypress/cypress/videos
          - store_artifacts:
              path: tests/cypress/cypress/screenshots
          pre-steps:
          - playground/setbashenv
          - run: echo 'export CYPRESS_baseUrl="${MULTIDEV_SITE_URL}"' >> $BASH_ENV
          - run: source $BASH_ENV

orbs:
  cypress: cypress-io/cypress@1.20.0
  playground: fauxalgore/playground@0.0.2
  pantheon: pantheon-systems/pantheon@0.5.1


jobs:
  behavioral:
      docker:
       - image: quay.io/pantheon-public/build-tools-ci:5.x
      steps:
          - playground/setbashenv
          - playground/composer_install
          - run: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"
          - run:
              name: Behat
              command: |
                export BEHAT_PARAMS='{"extensions" : {"Behat\\MinkExtension" : {"base_url" : "https://'$TERMINUS_ENV'-'$TERMINUS_SITE'.pantheonsite.io/"}}}'
                ./vendor/bin/behat --config=tests/behat/behat-pantheon.yml --strict --colors  --stop-on-failure --strict --log-step-times --suite=clickdriving "$@"
