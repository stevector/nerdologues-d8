defaults: &defaults
  docker:
   - image: quay.io/pantheon-public/build-tools-ci:4.x
  working_directory: ~/example_drops_8_composer
  environment:
    TZ: "/usr/share/zoneinfo/America/Los_Angeles"
    ADMIN_USERNAME: admin
    BUILD_TOOLS_VERSION: dev-master
    TERM: dumb

commands:
  setbashenv:
    description: "Copy the bash_env from the first job so that TERMINUS_ENV persists."
    steps:
        - checkout
        - attach_workspace:
            at: /tmp/workspace
        - run: cp /tmp/workspace/bash_env.txt $BASH_ENV
        - run: source $BASH_ENV

  composer_install_and_cache:
    description: "Restore composer cache, do a composer install, cache again."
    steps:
        - restore_cache:
            keys:
                - composer
        - run: composer install --optimize-autoloader --ignore-platform-reqs
        - save_cache:
            key: composer
            paths:
                - $HOME/.composer/cache

version: 2.1
jobs:
    build:
        <<: *defaults
        steps:
            - checkout
            - run:  /build-tools-ci/scripts/set-environment
            - composer_install_and_cache
            - run: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"

            - run: composer circle-tests

            - run:
                name: Deploy to Multidev
                command: ./vendor/pantheon-systems/docker-build-tools-ci/scripts/from-example-drops-8-composer/ci-scripts/02-init-site-under-test-clone-existing

            - run: cp $BASH_ENV bash_env.txt
            - persist_to_workspace:
                root: .
                paths:
                  - bash_env.txt

    backstop:
        docker:
            - image: backstopjs/backstopjs:3.9.5
        working_directory: ~/example_drops_8_composer
        steps:
            - setbashenv

            - run: cd backstop && ./run-backstop.sh

            - store_artifacts:
                path: /tmp/artifacts
                destination: artifact

            - run: ./backstop/report-backstop.sh

    behavioral:
        <<: *defaults
        steps:
            - setbashenv
            - composer_install_and_cache
            - run: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"
            - run:
                name: Behat
                command: ./vendor/pantheon-systems/docker-build-tools-ci/scripts/from-example-drops-8-composer/ci-scripts/run-behat --stop-on-failure --strict --log-step-times --suite=clickdriving

    merge:
        <<: *defaults
        steps:
            - setbashenv
            - composer_install_and_cache
            - run: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"

            - run: git remote add pantheon $(terminus connection:info $TERMINUS_SITE.dev --field=git_url)
            - run: ./vendor/pantheon-systems/docker-build-tools-ci/scripts/from-example-drops-8-composer/ci-scripts/05-merge-master

orbs:
  cypress: cypress-io/cypress@1
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - behavioral:
          requires:
          - backstop
      - backstop:
          requires:
             - build
      - cypress/run:
          requires:
          - backstop
          store_artifacts: true
          pre-steps:
            - setbashenv
            - run: echo 'export CYPRESS_baseUrl="${MULTIDEV_SITE_URL}"' >> $BASH_ENV
            - run: source $BASH_ENV
      - merge:
          requires:
             - behavioral
             - cypress/run
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
    - build
    - behavioral:
        requires:
        - backstop
    - backstop:
        requires:
          - build
    - cypress/run:
        requires:
          - backstop
        store_artifacts: true
        pre-steps:
          - setbashenv
          - run: echo 'export CYPRESS_baseUrl="${MULTIDEV_SITE_URL}"' >> $BASH_ENV
          - run: source $BASH_ENV
